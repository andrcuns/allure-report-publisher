name: Release

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
    paths:
      - lib/**/*
      - exe/allure-report-publisher
      - allure-report-publisher.gemspec
      - Dockerfile
      - Gemfile.lock

jobs:
  docker:
    name: Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.1.0
      - name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set images
        id: images
        run: |
          if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
            echo "IMAGES=andrcuns/allure-report-publisher,ghcr.io/andrcuns/allure-report-publisher" >> "$GITHUB_OUTPUT"
          else
            echo "IMAGES=ghcr.io/andrcuns/allure-report-publisher" >> "$GITHUB_OUTPUT"
          fi
      - name: Docker tags
        id: tags
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.images.outputs.IMAGES }}
          flavor: latest=false
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
      - name: Build and push
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.tags.outputs.tags }}

  gem:
    name: Ruby gem
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Set up Ruby 3.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true
      - name: Build and push
        run: bundle exec rake release
        env:
          GEM_HOST_API_KEY: ${{ secrets.GEM_HOST_API_KEY }}

  gh-release:
    name: Github release
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
